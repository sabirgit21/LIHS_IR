package model.ERP.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Nov 07 12:33:35 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblEmpImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        Vno,
        Vtp,
        Dated,
        Narration,
        DepartmentId,
        ProjectId,
        Name,
        FatName,
        DesignationId,
        GradeId,
        Salary,
        JoinDate,
        Dob,
        Cnic,
        Gender,
        HomeAddress,
        Mobile,
        Tel,
        Email,
        Ref,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        TblAdvLoan,
        TblDesignation,
        TblEmpExp,
        TblEmpQua,
        TblGrade,
        TblEmpKin,
        TblEmpAll;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int VNO = AttributesEnum.Vno.index();
    public static final int VTP = AttributesEnum.Vtp.index();
    public static final int DATED = AttributesEnum.Dated.index();
    public static final int NARRATION = AttributesEnum.Narration.index();
    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int FATNAME = AttributesEnum.FatName.index();
    public static final int DESIGNATIONID = AttributesEnum.DesignationId.index();
    public static final int GRADEID = AttributesEnum.GradeId.index();
    public static final int SALARY = AttributesEnum.Salary.index();
    public static final int JOINDATE = AttributesEnum.JoinDate.index();
    public static final int DOB = AttributesEnum.Dob.index();
    public static final int CNIC = AttributesEnum.Cnic.index();
    public static final int GENDER = AttributesEnum.Gender.index();
    public static final int HOMEADDRESS = AttributesEnum.HomeAddress.index();
    public static final int MOBILE = AttributesEnum.Mobile.index();
    public static final int TEL = AttributesEnum.Tel.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int REF = AttributesEnum.Ref.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int TBLADVLOAN = AttributesEnum.TblAdvLoan.index();
    public static final int TBLDESIGNATION = AttributesEnum.TblDesignation.index();
    public static final int TBLEMPEXP = AttributesEnum.TblEmpExp.index();
    public static final int TBLEMPQUA = AttributesEnum.TblEmpQua.index();
    public static final int TBLGRADE = AttributesEnum.TblGrade.index();
    public static final int TBLEMPKIN = AttributesEnum.TblEmpKin.index();
    public static final int TBLEMPALL = AttributesEnum.TblEmpAll.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblEmpImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.ERP.EO.TblEmp");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for Vno, using the alias name Vno.
     * @return the value of Vno
     */
    public Number getVno() {
        return (Number) getAttributeInternal(VNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Vno.
     * @param value value to set the Vno
     */
    public void setVno(Number value) {
        setAttributeInternal(VNO, value);
    }

    /**
     * Gets the attribute value for Vtp, using the alias name Vtp.
     * @return the value of Vtp
     */
    public String getVtp() {
        return (String) getAttributeInternal(VTP);
    }

    /**
     * Sets <code>value</code> as the attribute value for Vtp.
     * @param value value to set the Vtp
     */
    public void setVtp(String value) {
        setAttributeInternal(VTP, value);
    }

    /**
     * Gets the attribute value for Dated, using the alias name Dated.
     * @return the value of Dated
     */
    public Timestamp getDated() {
        return (Timestamp) getAttributeInternal(DATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dated.
     * @param value value to set the Dated
     */
    public void setDated(Timestamp value) {
        setAttributeInternal(DATED, value);
    }

    /**
     * Gets the attribute value for Narration, using the alias name Narration.
     * @return the value of Narration
     */
    public String getNarration() {
        return (String) getAttributeInternal(NARRATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Narration.
     * @param value value to set the Narration
     */
    public void setNarration(String value) {
        setAttributeInternal(NARRATION, value);
    }

    /**
     * Gets the attribute value for DepartmentId, using the alias name DepartmentId.
     * @return the value of DepartmentId
     */
    public BigDecimal getDepartmentId() {
        return (BigDecimal) getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DepartmentId.
     * @param value value to set the DepartmentId
     */
    public void setDepartmentId(BigDecimal value) {
        setAttributeInternal(DEPARTMENTID, value);
    }

    /**
     * Gets the attribute value for ProjectId, using the alias name ProjectId.
     * @return the value of ProjectId
     */
    public BigDecimal getProjectId() {
        return (BigDecimal) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProjectId.
     * @param value value to set the ProjectId
     */
    public void setProjectId(BigDecimal value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for Name, using the alias name Name.
     * @return the value of Name
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Name.
     * @param value value to set the Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for FatName, using the alias name FatName.
     * @return the value of FatName
     */
    public String getFatName() {
        return (String) getAttributeInternal(FATNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FatName.
     * @param value value to set the FatName
     */
    public void setFatName(String value) {
        setAttributeInternal(FATNAME, value);
    }

    /**
     * Gets the attribute value for DesignationId, using the alias name DesignationId.
     * @return the value of DesignationId
     */
    public BigDecimal getDesignationId() {
        return (BigDecimal) getAttributeInternal(DESIGNATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DesignationId.
     * @param value value to set the DesignationId
     */
    public void setDesignationId(BigDecimal value) {
        setAttributeInternal(DESIGNATIONID, value);
    }

    /**
     * Gets the attribute value for GradeId, using the alias name GradeId.
     * @return the value of GradeId
     */
    public BigDecimal getGradeId() {
        return (BigDecimal) getAttributeInternal(GRADEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GradeId.
     * @param value value to set the GradeId
     */
    public void setGradeId(BigDecimal value) {
        setAttributeInternal(GRADEID, value);
    }

    /**
     * Gets the attribute value for Salary, using the alias name Salary.
     * @return the value of Salary
     */
    public BigDecimal getSalary() {
        return (BigDecimal) getAttributeInternal(SALARY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Salary.
     * @param value value to set the Salary
     */
    public void setSalary(BigDecimal value) {
        setAttributeInternal(SALARY, value);
    }

    /**
     * Gets the attribute value for JoinDate, using the alias name JoinDate.
     * @return the value of JoinDate
     */
    public Timestamp getJoinDate() {
        return (Timestamp) getAttributeInternal(JOINDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for JoinDate.
     * @param value value to set the JoinDate
     */
    public void setJoinDate(Timestamp value) {
        setAttributeInternal(JOINDATE, value);
    }

    /**
     * Gets the attribute value for Dob, using the alias name Dob.
     * @return the value of Dob
     */
    public Timestamp getDob() {
        return (Timestamp) getAttributeInternal(DOB);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dob.
     * @param value value to set the Dob
     */
    public void setDob(Timestamp value) {
        setAttributeInternal(DOB, value);
    }

    /**
     * Gets the attribute value for Cnic, using the alias name Cnic.
     * @return the value of Cnic
     */
    public String getCnic() {
        return (String) getAttributeInternal(CNIC);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cnic.
     * @param value value to set the Cnic
     */
    public void setCnic(String value) {
        setAttributeInternal(CNIC, value);
    }

    /**
     * Gets the attribute value for Gender, using the alias name Gender.
     * @return the value of Gender
     */
    public String getGender() {
        return (String) getAttributeInternal(GENDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Gender.
     * @param value value to set the Gender
     */
    public void setGender(String value) {
        setAttributeInternal(GENDER, value);
    }

    /**
     * Gets the attribute value for HomeAddress, using the alias name HomeAddress.
     * @return the value of HomeAddress
     */
    public String getHomeAddress() {
        return (String) getAttributeInternal(HOMEADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for HomeAddress.
     * @param value value to set the HomeAddress
     */
    public void setHomeAddress(String value) {
        setAttributeInternal(HOMEADDRESS, value);
    }

    /**
     * Gets the attribute value for Mobile, using the alias name Mobile.
     * @return the value of Mobile
     */
    public String getMobile() {
        return (String) getAttributeInternal(MOBILE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Mobile.
     * @param value value to set the Mobile
     */
    public void setMobile(String value) {
        setAttributeInternal(MOBILE, value);
    }

    /**
     * Gets the attribute value for Tel, using the alias name Tel.
     * @return the value of Tel
     */
    public String getTel() {
        return (String) getAttributeInternal(TEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Tel.
     * @param value value to set the Tel
     */
    public void setTel(String value) {
        setAttributeInternal(TEL, value);
    }

    /**
     * Gets the attribute value for Email, using the alias name Email.
     * @return the value of Email
     */
    public String getEmail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Email.
     * @param value value to set the Email
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the attribute value for Ref, using the alias name Ref.
     * @return the value of Ref
     */
    public String getRef() {
        return (String) getAttributeInternal(REF);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ref.
     * @param value value to set the Ref
     */
    public void setRef(String value) {
        setAttributeInternal(REF, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblAdvLoan() {
        return (RowIterator) getAttributeInternal(TBLADVLOAN);
    }

    /**
     * @return the associated entity TblDesignationImpl.
     */
    public TblDesignationImpl getTblDesignation() {
        return (TblDesignationImpl) getAttributeInternal(TBLDESIGNATION);
    }

    /**
     * Sets <code>value</code> as the associated entity TblDesignationImpl.
     */
    public void setTblDesignation(TblDesignationImpl value) {
        setAttributeInternal(TBLDESIGNATION, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblEmpExp() {
        return (RowIterator) getAttributeInternal(TBLEMPEXP);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblEmpQua() {
        return (RowIterator) getAttributeInternal(TBLEMPQUA);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public TblGradeImpl getTblGrade() {
        return (TblGradeImpl) getAttributeInternal(TBLGRADE);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setTblGrade(TblGradeImpl value) {
        setAttributeInternal(TBLGRADE, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblEmpKin() {
        return (RowIterator) getAttributeInternal(TBLEMPKIN);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblEmpAll() {
        return (RowIterator) getAttributeInternal(TBLEMPALL);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[] { id });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number loginId = null;
                        try {
                            loginId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessUMID"));
                        } catch(Exception ex) {
                            ex.printStackTrace();
                        }
                        
                        if (operation == DML_INSERT) {
                            setCreatedBy(loginId);
                            setUpdatedBy(loginId);
                            } else if(operation == DML_UPDATE) {
                            setUpdatedBy(loginId);
                        }
        super.doDML(operation, e);
    }
}

