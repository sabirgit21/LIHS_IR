package model.ERP.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Nov 07 12:34:57 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblEmpQuaImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        EmpId,
        Institute,
        Degree,
        StDate,
        EnDate,
        GradePerc,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        TblEmp;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int EMPID = AttributesEnum.EmpId.index();
    public static final int INSTITUTE = AttributesEnum.Institute.index();
    public static final int DEGREE = AttributesEnum.Degree.index();
    public static final int STDATE = AttributesEnum.StDate.index();
    public static final int ENDATE = AttributesEnum.EnDate.index();
    public static final int GRADEPERC = AttributesEnum.GradePerc.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int TBLEMP = AttributesEnum.TblEmp.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblEmpQuaImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for EmpId, using the alias name EmpId.
     * @return the value of EmpId
     */
    public BigDecimal getEmpId() {
        return (BigDecimal) getAttributeInternal(EMPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpId.
     * @param value value to set the EmpId
     */
    public void setEmpId(BigDecimal value) {
        setAttributeInternal(EMPID, value);
    }

    /**
     * Gets the attribute value for Institute, using the alias name Institute.
     * @return the value of Institute
     */
    public String getInstitute() {
        return (String) getAttributeInternal(INSTITUTE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Institute.
     * @param value value to set the Institute
     */
    public void setInstitute(String value) {
        setAttributeInternal(INSTITUTE, value);
    }

    /**
     * Gets the attribute value for Degree, using the alias name Degree.
     * @return the value of Degree
     */
    public String getDegree() {
        return (String) getAttributeInternal(DEGREE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Degree.
     * @param value value to set the Degree
     */
    public void setDegree(String value) {
        setAttributeInternal(DEGREE, value);
    }

    /**
     * Gets the attribute value for StDate, using the alias name StDate.
     * @return the value of StDate
     */
    public Timestamp getStDate() {
        return (Timestamp) getAttributeInternal(STDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StDate.
     * @param value value to set the StDate
     */
    public void setStDate(Timestamp value) {
        setAttributeInternal(STDATE, value);
    }

    /**
     * Gets the attribute value for EnDate, using the alias name EnDate.
     * @return the value of EnDate
     */
    public Timestamp getEnDate() {
        return (Timestamp) getAttributeInternal(ENDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnDate.
     * @param value value to set the EnDate
     */
    public void setEnDate(Timestamp value) {
        setAttributeInternal(ENDATE, value);
    }

    /**
     * Gets the attribute value for GradePerc, using the alias name GradePerc.
     * @return the value of GradePerc
     */
    public String getGradePerc() {
        return (String) getAttributeInternal(GRADEPERC);
    }

    /**
     * Sets <code>value</code> as the attribute value for GradePerc.
     * @param value value to set the GradePerc
     */
    public void setGradePerc(String value) {
        setAttributeInternal(GRADEPERC, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * @return the associated entity TblEmpImpl.
     */
    public TblEmpImpl getTblEmp() {
        return (TblEmpImpl) getAttributeInternal(TBLEMP);
    }

    /**
     * Sets <code>value</code> as the associated entity TblEmpImpl.
     */
    public void setTblEmp(TblEmpImpl value) {
        setAttributeInternal(TBLEMP, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.ERP.EO.TblEmpQua");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number loginId = null;
                        try {
                            loginId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessUMID"));
                        } catch(Exception ex) {
                            ex.printStackTrace();
                        }
                        
                        if (operation == DML_INSERT) {
                            setCreatedBy(loginId);
                            setUpdatedBy(loginId);
                            } else if(operation == DML_UPDATE) {
                            setUpdatedBy(loginId);
                        }
        super.doDML(operation, e);
    }
}

